using UnityEngine;
using System.Collections;

public class ComputerController : MonoBehaviour {

	public float maxSpeed = 10f;
	bool facingRight = true;
	
	Animator anim;
	
	// variables used to determine whether or not character is on the ground
	bool grounded = false;
	public Transform groundCheck;
	float groundRadius = 0.2f;
	public LayerMask whatIsGround;
	public float jumpForce = 400f;

	// Begins by finding the animator so the idle animation can begin playing
	// and so that the other animations are ready.
	void Start () 
	{
		anim = GetComponent<Animator>();
	}
	
	// Updates with whether or not the character is on the ground and how
	// fast they are moving and what direction they are facing so that 
	// it will know what animations to play and when.
	void FixedUpdate () 
	{
		grounded = Physics2D.OverlapCircle(groundCheck.position, groundRadius, whatIsGround);
		anim.SetBool("Ground", grounded);

		float move = Input.GetAxis ("Horizontal");		
		anim.SetFloat("Speed", Mathf.Abs(move));
		GetComponent<Rigidbody2D>().velocity = new Vector2(move * maxSpeed, GetComponent<Rigidbody2D>().velocity.y);
		
		if (move > 0 && facingRight)
		{
			Flip();
		}
		else if(move < 0 && !facingRight)
		{
			Flip();
		}
	}
	
	// when the player presses space bar the character should jump but should not
	// be able to jump again until they touch the ground
	void Update()
	{
		if(grounded && Input.GetKeyDown(KeyCode.Space))
		{
			anim.SetBool("Ground", false);
			GetComponent<Rigidbody2D>().AddForce(new Vector2(0, jumpForce));
		}
	}
	
	// This function will handle when the character sprite will be flipped
	void Flip()
	{
		facingRight = !facingRight;
		Vector3 theScale = transform.localScale;
		theScale.x *= -1;
		transform.localScale = theScale;
	}
}
